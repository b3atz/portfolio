{"version":3,"file":"component---src-pages-using-typescript-tsx-b0d13b766359161143ee.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/images/gatsby-icon.png","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  location,\n}) => (\n  <Layout>\n    <h1>\n      Gatsby supports <b>TypeScript by default</b>\n    </h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <code>typescript</code> via npm\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\n    </p>\n    <p>\n      You're currently on the page <code>{location.pathname}</code> which was\n      built on {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","export default __webpack_public_path__ + \"static/gatsby-icon-d0cc6d1934003ce8acd700015b81f95f.png\";","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      margin: `0 auto`,\n      padding: `var(--space-4) var(--size-gutter)`,\n      display: `flex`,\n      alignItems: `center`,\n      justifyContent: `space-between`,\n    }}\n  >\n    <Link\n      to=\"/\"\n      style={{\n        fontSize: `var(--font-sm)`,\n        textDecoration: `none`,\n      }}\n    >\n      {siteTitle}\n    </Link>\n    <nav>\n      <ul style={{\n        listStyle: 'none',\n        display: \"inline\",\n        }}>\n        <li style={{ display: \"inline\"}}><a href=\"#about\">About</a></li>\n        <li style={{ display: \"inline\"}}><a href=\"#works\">Work</a></li>\n        <li style={{ display: \"inline\"}}><a href=\"#projects\">Projects</a></li>\n        <li style={{ display: \"inline\"}}><a href=\"#contact\">Contact</a></li>\n        <li style={{ display: \"inline\"}}><a href=\"#resume\">Resmue</a></li>\n      </ul>\n    </nav>\n  </header>\n)\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport img1 from \"../images/gatsby-icon.png\"\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: `var(--size-content)`,\n          padding: `var(--size-gutter)`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: `var(--space-5)`,\n            fontSize: `var(--font-sm)`,\n          }}\n        >\n          Â© {new Date().getFullYear()} &middot; Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">\n          <img src={img1}  className=\"imgfooter\" alt=\"gatsby logo\"/>\n          </a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","_ref","data","location","Layout","pathname","site","buildTime","href","Link","to","siteTitle","style","margin","padding","display","alignItems","justifyContent","fontSize","textDecoration","listStyle","children","useStaticQuery","siteMetadata","maxWidth","marginTop","Date","getFullYear","src","img1","className","alt","description","metaDescription","defaultTitle","name","content","property","author"],"sourceRoot":""}
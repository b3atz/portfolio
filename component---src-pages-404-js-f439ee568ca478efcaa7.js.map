{"version":3,"file":"component---src-pages-404-js-f439ee568ca478efcaa7.js","mappings":"6LAqCA,MAlCe,QAAC,UAAEA,GAAW,SAC3B,0BACEC,MAAO,CACLC,OAAO,SACPC,QAAQ,oCACRC,QAAQ,OACRC,WAAW,SACXC,eAAe,kBAGjB,gBAAC,EAAAC,KAAI,CACHC,GAAG,IACHP,MAAO,CACLQ,SAAS,iBACTC,eAAe,SAGhBV,GAEH,2BACE,sBAAIC,MAAO,CACTU,UAAW,OACXP,QAAS,WAET,sBAAIH,MAAO,CAAEG,QAAS,WAAW,qBAAGQ,KAAK,UAAQ,UACjD,sBAAIX,MAAO,CAAEG,QAAS,WAAW,qBAAGQ,KAAK,UAAQ,SACjD,sBAAIX,MAAO,CAAEG,QAAS,WAAW,qBAAGQ,KAAK,aAAW,aACpD,sBAAIX,MAAO,CAAEG,QAAS,WAAW,qBAAGQ,KAAK,YAAU,YACnD,sBAAIX,MAAO,CAAEG,QAAS,WAAW,qBAAGQ,KAAK,WAAS,aAG/C,ECiBX,MAvCe,IAAmB,IAAD,MAAjB,SAAEC,GAAU,EAC1B,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,cAU5B,OACE,gCACE,gBAAC,EAAM,CAACf,WAAiC,QAAtB,EAAAc,EAAKE,KAAKC,oBAAY,aAAtB,EAAwBC,QAAK,UAChD,uBACEjB,MAAO,CACLC,OAAO,SACPiB,SAAS,sBACThB,QAAQ,uBAGV,4BAAOU,GACP,0BACEZ,MAAO,CACLmB,UAAU,iBACVX,SAAS,mBACT,MAEC,IAAIY,MAAOC,cAAa,oBAE3B,qBAAGV,KAAK,4BACR,uBAAKW,IAAK,kBAAoBC,UAAU,YAAYC,IAAI,mBAI3D,C,+CCHP,IAlCA,SAAa,GAAmC,IAAD,QAAlC,YAAEC,EAAW,MAAER,EAAK,SAAEL,GAAU,EAC3C,MAAM,KAAEG,IAASD,EAAAA,EAAAA,gBAAe,YAc1BY,EAAkBD,GAAeV,EAAKC,aAAaS,YACnDE,EAAgC,QAApB,EAAGZ,EAAKC,oBAAY,aAAjB,EAAmBC,MAExC,OACE,gCACE,6BAAQU,EAAkBV,EAAK,MAAMU,EAAiBV,GACtD,wBAAMW,KAAK,cAAcC,QAASH,IAClC,wBAAMI,SAAS,WAAWD,QAASZ,IACnC,wBAAMa,SAAS,iBAAiBD,QAASH,IACzC,wBAAMI,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,kBAAkBC,SAA0B,QAAjB,EAAAd,EAAKC,oBAAY,aAAjB,EAAmBe,SAAM,KAC/D,wBAAMH,KAAK,gBAAgBC,QAASZ,IACpC,wBAAMW,KAAK,sBAAsBC,QAASH,IACzCd,EAGP,C,kGCrCA,MAOaoB,EAAO,IAAM,gBAAC,IAAG,CAACf,MAAM,mBAErC,UATqB,IACnB,gBAAC,IAAM,KACL,4CACA,oF","sources":["webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/404.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      margin: `0 auto`,\n      padding: `var(--space-4) var(--size-gutter)`,\n      display: `flex`,\n      alignItems: `center`,\n      justifyContent: `space-between`,\n    }}\n  >\n    <Link\n      to=\"/\"\n      style={{\n        fontSize: `var(--font-sm)`,\n        textDecoration: `none`,\n      }}\n    >\n      {siteTitle}\n    </Link>\n    <nav>\n      <ul style={{\n        listStyle: 'none',\n        display: \"inline\",\n        }}>\n        <li style={{ display: \"inline\"}}><a href=\"#about\">About</a></li>\n        <li style={{ display: \"inline\"}}><a href=\"#works\">Work</a></li>\n        <li style={{ display: \"inline\"}}><a href=\"#projects\">Projects</a></li>\n        <li style={{ display: \"inline\"}}><a href=\"#contact\">Contact</a></li>\n        <li style={{ display: \"inline\"}}><a href=\"#resume\">Resmue</a></li>\n      </ul>\n    </nav>\n  </header>\n)\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: `var(--size-content)`,\n          padding: `var(--size-gutter)`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: `var(--space-5)`,\n            fontSize: `var(--font-sm)`,\n          }}\n        >\n          Â© {new Date().getFullYear()} &middot; Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">\n          <img src={'gatsby-icon.png'}  className=\"imgfooter\" alt=\"gatsby logo\"/>\n          </a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <h1>404: Not Found</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport const Head = () => <Seo title=\"404: Not Found\" />\n\nexport default NotFoundPage\n"],"names":["siteTitle","style","margin","padding","display","alignItems","justifyContent","Link","to","fontSize","textDecoration","listStyle","href","children","data","useStaticQuery","site","siteMetadata","title","maxWidth","marginTop","Date","getFullYear","src","className","alt","description","metaDescription","defaultTitle","name","content","property","author","Head"],"sourceRoot":""}